@use '../abstracts/variables' as *;


.ng-live {
    // border: solid rebeccapurple 2px;

    // used on every section top - make a mixin?
    @media (min-width: $mq-1000) {
        margin-top: 6rem;
    }

    .latest-event {
        margin-top: clamp(5rem, 7vw, 8rem); // can i make this utility class? needed for spacing below every heading
        text-align: center;

        .details {
            max-width: max-content;
            position: relative;
            margin: 0 auto 7rem ;
        }

        > img {
            margin: 0 auto;
        }

        .badge {
            background-color: red;
            border-radius: 10px;
            position: absolute;
            width: max-content;
            padding: .25rem .75rem;
            top: 10%;
            // right: 10%;
            transform: rotate(-45deg);
            color: black;
            align-self: end;
        }

        @media (min-width: $mq-768) {
            display: flex;
            justify-content: space-evenly;
            align-items: center;

            .details {
                margin: 0;
                order: 1;
            }

            > img {
                max-width: 400px;
                margin: 0;
            }
        }
    }
}


.bg-logo-mini {
    // border: solid rebeccapurple 2px;
    display: grid;
    align-items: center;
    justify-items: center;
    grid-template-columns: 1fr 1fr;
    text-align: center;

    > img,
    > div {
        // border: solid green 2px;
        grid-column: 1 / 3;
        grid-row: 1 / 3;
    }

    > div {
        z-index: 100;
    }
}

.gallery {
    // border: solid rebeccapurple 2px;
    text-align: center;

    .images {
        justify-items: center;

        > img {
            height: 100%;
            width: 100%;
            object-fit: cover;
            border-radius: 15px;
        }
    }

    > a {
        margin-top: 8rem;
    }

    @media (min-width: $mq-768) {
        .images {
            grid-template-columns: repeat(4, 1fr);
            grid-auto-flow: dense;
            // grid-template-rows: repeat(2, 1fr);
            
            // :nth-child(3),
            // :nth-child(4) {
            //     grid-column: span 2;
            //     grid-row: span 2;
            // }
        }
    }
}